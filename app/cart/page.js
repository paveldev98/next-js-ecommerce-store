import { cookies } from 'next/headers';
import Image from 'next/image';
import Link from 'next/link';
import RemoveButton from './RemoveButton';

export const metadata = {
  title: 'Cart',
  description: 'Generated by create next app',
};

const products = [
  {
    id: 1,
    imgSrc: '/speaker-1.png',
    productName: 'Portable Wireless Blootooth Speaker',
    productPrice: 77,
  },
  {
    id: 2,
    imgSrc: '/speaker-2.png',
    productName: 'Portable Wireless Mini Blootooth Speaker',
    productPrice: 57,
  },
  {
    id: 3,
    imgSrc: '/headphones-1.png',
    productName: 'Wireless Foldable Bluetooth Headphones',
    productPrice: 40,
  },
  {
    id: 4,
    imgSrc: '/headphones-2.png',
    productName: 'Foldable Wireless Bluetooth Headset',
    productPrice: 52,
  },
  {
    id: 5,
    imgSrc: '/mouse.png',
    productName: 'Portable Wireless Gaming Mouse',
    productPrice: 30,
  },
  {
    id: 6,
    imgSrc: '/keyboard.png',
    productName: 'Portable Wireless Keyboard',
    productPrice: 80,
  },
  {
    id: 7,
    imgSrc: '/portable-monitor.png',
    productName: 'Wireless Monitor HD Resolution',
    productPrice: 140,
  },
  {
    id: 8,
    imgSrc: '/power-bank.png',
    productName: 'Portable Power Bank Charger',
    productPrice: 90,
  },
];

export default async function Products() {
  const productCommentsCookie = (await cookies()).get('productsComments');

  let productComments = productCommentsCookie
    ? JSON.parse(productCommentsCookie.value)
    : [];

  if (!Array.isArray(productComments)) {
    productComments = [];
  }

  const totalPrice = productComments.reduce((total, productComment) => {
    const product = products.find((p) => p.id === productComment.id); // Find the matching product
    return (
      total + (parseInt(productComment.comment) * product?.productPrice || 0)
    );
  }, 0);

  return (
    <>
      <div
        style={{
          color: '#FF6719',
          fontSize: '24px',
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'center',
          paddingTop: '50px',
          paddingBottom: '50px',
        }}
      >
        My Cart
      </div>
      <div
        style={{
          display: 'flex',
          flexDirection: 'row',
          justifyContent: 'center',
          flexWrap: 'wrap',
          gap: '40px',
        }}
      >
        {products.map((product) => {
          const productComment = productComments.find(
            (productObject) => product.id === productObject.id,
          );
          return (
            <div
              data-test-id="cart-product-<product id>"
              key={`product-${product.id}`}
              style={{
                display:
                  productComment && productComment.comment ? 'flex' : 'none',
                flexDirection: 'row',
                alignItems: 'center',
                // gap: '10px',
                marginBottom: '10px',
                width: '95%',
                justifyContent: 'space-evenly',
                border: '1px solid #cccccc',
                borderRadius: '8px',
                padding: '20px 0 12px 0',
              }}
            >
              <Link href={`/${product.id}`}>
                <Image
                  src={product.imgSrc}
                  width={150}
                  height={120}
                  alt="product-image"
                />
              </Link>
              <a
                style={{
                  textAlign: 'center',
                  width: '15%',
                  fontWeight: 'bold',
                }}
              >
                {product.productName}
              </a>
              <p
                data-test-id="cart-product-quantity-<product id>"
                style={{ textAlign: 'center' }}
              >
                Quantity
                <br /> {productComment?.comment}
              </p>
              <h2 style={{ color: '#FF6719' }}>${product.productPrice}</h2>
              <h3 style={{ textAlign: 'center' }}>
                Subtotal
                <br />${productComment?.comment * product.productPrice}
              </h3>
              <RemoveButton
                data-test-id="cart-product-remove-<product id>"
                productId={product.id}
              />
            </div>
          );
        })}
      </div>
      <div
        style={{
          height: '1px',
          background: '#FF6719',
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'center',
          justifyContent: 'center',
          margin: '20px 21px 20px 21px',
          borderRadius: '8px',
        }}
      />
      <div
        style={{
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'center',
        }}
      >
        {' '}
        <h2 data-test-id="cart-total" style={{ marginBottom: '20px' }}>
          Total: ${totalPrice}
        </h2>
        <Link
          data-test-id="cart-checkout"
          href={`/checkout?totalPrice=${totalPrice}`}
          style={{
            padding: '15px 20px',
            marginTop: '20px',
            marginBottom: '40px',
            color: '#F9F9F9',
            background: '#FF6719',
            fontSize: '16PX',
            border: '1px solid #FF9D33',
            borderRadius: '5px',
            cursor: 'pointer',
          }}
        >
          Checkout
        </Link>
      </div>
    </>
  );
}
